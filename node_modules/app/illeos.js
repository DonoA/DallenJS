var mysql = require('mysql');
var debug = require('debug')('DallenJS:server');
var fs = require('fs');

GLOBAL.wikifeature = 'page';

var dbconnection = mysql.createConnection(GLOBAL.ConnStr);

var illeos = {
  listPages: function(callback, res){
      var q = "select title from wikipages";
      dbconnection.query(q, function(err, rows) {
          if(err){
            res.status(404);
            res.render('error', {
              message: "Not Found",
              error: {status: "404"}
            });
          }else{
            callback(rows);
          }
      });
  },
  getPage: function(url, callback, res){
      var q = "select * from wikipages where url='" + url + "';";
      dbconnection.query(q, function(err, rows) {
          if(err){
            res.status(404);
            res.render('error', {
              message: "Not Found",
              error: {status: "404"}
            });
            console.log(q);
            console.error(err.stack);
          }else{
            callback(rows[0]);
          }
      });
  },
  addPage: function(page, callback, res, editsum, session){
    var url = page.title.replace(' ', '_');
    if(url.length > 20){
      url = url.supstring(0, 20);
    }
    var q = "insert into wikipages (url, title, template, content, createdby, editsum) values ("+
    url + "," + page.title + ", " + page.template + ", " + page.content + ", " + session.profile.email + ", " + editsum + ")";
    dbconnection.query(q, function(err, rows) {
        if(err){
          res.status(404);
          res.render('error', {
            message: "Not Found",
            error: {status: "404"}
          });
          console.log(q);
          console.error(err.stack);
        }else{
          callback(rows);
        }
    });
  },
  editPage: function(pageid, page, callback, res){
    var q = "update wikipages set ";
    var keys = Object.keys(page);
    for (i = 0; i < Object.keys(page).length; i++) {
      q += keys[i] + "=" + page[keys[i]] + ",";
    }
    q -= ",";
    q += "where PageID='" + pageid + "';"
    console.log(q);
    dbconnection.query(q, function(err, rows) {
        if(err){
          res.status(404);
          res.render('error', {
            message: "Not Found",
            error: {status: "404"}
          });
          console.log(q);
          console.error(err.stack);
        }else{
          callback(rows);
        }
    });
  },
  deletePage: function(pageid, callback, res){
    var q = "delete from wikipages where PageID='" + pageid + "';";
    dbconnection.query(q, function(err, rows) {
        if(err){
          res.status(404);
          res.render('error', {
            message: "Not Found",
            error: {status: "404"}
          });
          console.log(q);
          console.error(err.stack);
        }else{
          callback(rows);
        }
    });
  },
  recentEdits: function(callback, res){
    var q = "select editdate, editsum from wikipages order by editdate desc limit 10";
    dbconnection.query(q, function(err, rows) {
        if(err){
          res.status(404);
          res.render('error', {
            message: "Not Found",
            error: {status: "404"}
          });
          console.log(q);
          console.error(err.stack);
        }else{
          callback(rows);
        }
    });
  },
  connect: function(){
    dbconnection.connect(function(err) {
      if (err) {
        console.error('error connecting: ' + err.stack);
        return;
      }
      console.log('connected as id ' + dbconnection.threadId);
    });
  }
};

module.exports = illeos;
